{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./mainservice.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthServiceService {\n  constructor(ms, router) {\n    this.ms = ms;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.ms.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthServiceService.ɵfac = function AuthServiceService_Factory(t) {\n  return new (t || AuthServiceService)(i0.ɵɵinject(i1.MainserviceService), i0.ɵɵinject(i2.Router));\n};\nAuthServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthServiceService,\n  factory: AuthServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,EAAqB,EAASC,MAAa;IAA3C,OAAE,GAAFD,EAAE;IAA4B,WAAM,GAANC,MAAM;EAAW;EACnEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACJ,EAAE,CAACK,UAAU,EAAE,EAAE;MACxB,OAAO,IAAI;KACZ,MAAI;MACJ,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAbWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAS,SAAlBT,kBAAkB;EAAAU,YAFjB;AAAM","names":["AuthServiceService","constructor","ms","router","canActivate","route","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/services/auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MainserviceService } from './mainservice.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  constructor(private ms:MainserviceService,private router:Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    if (this.ms.isLoggedIn()) {\n      return true;\n    }else{\n     this.router.navigate(['/login'])\n      return false;}\n      \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}