{"ast":null,"code":"import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Assignments } from '../../../model/assignments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/mainservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/group-service.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction TrainerAssignmentsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 18);\n    i0.ɵɵtext(2, \"No assignments available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    width: a0\n  };\n};\nfunction TrainerAssignmentsComponent_div_3_div_1_div_7_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r8.progress + \"%\"));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r8.progress);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.progress, \"% \");\n  }\n}\nfunction TrainerAssignmentsComponent_div_3_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 24);\n    i0.ɵɵtext(2, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 25)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"h5\", 6);\n    i0.ɵɵtext(8, \"Group Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 26, 10);\n    i0.ɵɵlistener(\"ngSubmit\", function TrainerAssignmentsComponent_div_3_div_1_div_7_Template_form_ngSubmit_11_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ass_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.uploadAssign(ass_r5.assignId));\n    });\n    i0.ɵɵelementStart(13, \"div\", 11)(14, \"label\", 12);\n    i0.ɵɵtext(15, \"Assignment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 27);\n    i0.ɵɵlistener(\"change\", function TrainerAssignmentsComponent_div_3_div_1_div_7_Template_input_change_16_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.selectFile($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(17, TrainerAssignmentsComponent_div_3_div_1_div_7_div_17_Template, 3, 5, \"div\", 28);\n    i0.ɵɵelementStart(18, \"button\", 16);\n    i0.ɵɵtext(19, \"Add\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ass_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"data-target\", \"#uploadFile\" + ass_r5.assignId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"uploadFile\" + ass_r5.assignId);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.currentFile);\n  }\n}\nfunction TrainerAssignmentsComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TrainerAssignmentsComponent_div_3_div_1_div_7_Template, 20, 3, \"div\", 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ass_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ass_r5.assignName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due time : \", i0.ɵɵpipeBind2(6, 3, ass_r5.endDate, \"dd/MM/yyyy HH:mm:ss\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.user.role == 3);\n  }\n}\nfunction TrainerAssignmentsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TrainerAssignmentsComponent_div_3_div_1_Template, 8, 6, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.assigns);\n  }\n}\nfunction TrainerAssignmentsComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.message);\n  }\n}\nexport class TrainerAssignmentsComponent {\n  constructor(ms, route, gs) {\n    this.ms = ms;\n    this.route = route;\n    this.gs = gs;\n    this.msg = \"\";\n    this.message = \"\";\n    this.assign = new Assignments();\n    this.progress = 0;\n    this.curDate = new Date();\n  }\n  ngOnInit() {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.groupId = this.route.snapshot.paramMap.get('groupId');\n    this.gs.getAssignments(this.groupId).subscribe(data => {\n      this.assigns = data;\n    }, error => {\n      this.msg = \"error\";\n    });\n    this.ms.getUser(this.id).subscribe(data => {\n      this.user = data;\n    }, error => {});\n  }\n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n  createAssign() {\n    this.assign.groupId = this.groupId;\n    this.assign.startDate = new Date();\n    this.gs.postAssignment(this.groupId, this.assign).subscribe(data => {\n      console.log(data);\n    }, error => {});\n  }\n  uploadAssign(assignId) {\n    this.progress = 0;\n    if (this.selectedFiles) {\n      const file = this.selectedFiles.item(0);\n      if (file) {\n        this.currentFile = file;\n        this.gs.submitFile(this.currentFile, assignId, this.id).subscribe(event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progress = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            this.message = event.body.message;\n          }\n        }, err => {\n          console.log(err);\n          this.progress = 0;\n          if (err.error && err.error.message) {\n            this.message = err.error.message;\n          } else {\n            this.message = 'Could not upload the file!';\n          }\n          this.currentFile = undefined;\n        });\n      }\n      this.selectedFiles = undefined;\n    }\n  }\n}\nTrainerAssignmentsComponent.ɵfac = function TrainerAssignmentsComponent_Factory(t) {\n  return new (t || TrainerAssignmentsComponent)(i0.ɵɵdirectiveInject(i1.MainserviceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GroupServiceService));\n};\nTrainerAssignmentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TrainerAssignmentsComponent,\n  selectors: [[\"app-trainer-assignments\"]],\n  decls: 25,\n  vars: 5,\n  consts: [[\"data-toggle\", \"modal\", \"type\", \"submit\", \"data-target\", \"#addAssign\", 1, \"btn\", \"btn-warning\", 2, \"float\", \"right\"], [4, \"ngIf\"], [\"id\", \"addAssign\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel2\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"d-flex\", \"justify-content-center\"], [1, \"modal-content\", \"w-75\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel2\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\", \"p-4\"], [3, \"ngSubmit\"], [\"groupForm\", \"ngForm\"], [1, \"form-outline\", \"mb-4\"], [1, \"form-label\"], [\"name\", \"assignName\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email2\", 1, \"form-label\"], [\"type\", \"datetime-local\", \"name\", \"endDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [\"class\", \"alert alert-secondary\", \"role\", \"alert\", 4, \"ngIf\"], [2, \"color\", \"brown\", \"font-style\", \"oblique\"], [\"class\", \"card-deck\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-deck\"], [1, \"card\", \"mb-3\", \"border-warning\"], [1, \"card-body\", \"shadow-lg\"], [2, \"float\", \"right\"], [\"data-toggle\", \"modal\", \"type\", \"submit\", 1, \"btn\", \"btn-warning\", 2, \"float\", \"right\"], [\"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel2\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", 3, \"id\"], [\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"file\", 3, \"change\"], [\"class\", \"progress my-3\", 4, \"ngIf\"], [1, \"progress\", \"my-3\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-info\", \"progress-bar-striped\", 3, \"ngStyle\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"]],\n  template: function TrainerAssignmentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Post \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TrainerAssignmentsComponent_div_2_Template, 3, 0, \"div\", 1);\n      i0.ɵɵtemplate(3, TrainerAssignmentsComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"h5\", 6);\n      i0.ɵɵtext(9, \"Group Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"button\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"form\", 9, 10);\n      i0.ɵɵlistener(\"ngSubmit\", function TrainerAssignmentsComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.createAssign();\n      });\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Assignment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TrainerAssignmentsComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.assign.assignName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"End Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function TrainerAssignmentsComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.assign.endDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"button\", 16);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(24, TrainerAssignmentsComponent_div_24_Template, 2, 1, \"div\", 17);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.msg == \"error\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.msg == \"\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.assign.assignName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.assign.endDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i5.NgForOf, i5.NgIf, i5.NgStyle, i5.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpEventType","HttpResponse","Assignments","i0","TrainerAssignmentsComponent","constructor","ms","route","gs","Date","ngOnInit","loggedIn","isLoggedIn","id","snapshot","paramMap","get","groupId","getAssignments","subscribe","data","assigns","error","msg","getUser","user","selectFile","event","selectedFiles","target","files","createAssign","assign","startDate","postAssignment","console","log","uploadAssign","assignId","progress","file","item","currentFile","submitFile","type","UploadProgress","Math","round","loaded","total","message","body","err","undefined","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/trainer/trainer-assignments/trainer-assignments.component.ts","/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/trainer/trainer-assignments/trainer-assignments.component.html"],"sourcesContent":["import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Assignments } from '../../../model/assignments';\nimport { GroupServiceService } from '../../../services/group-service.service';\nimport { MainserviceService } from '../../../services/mainservice.service';\n\n@Component({\n  selector: 'app-trainer-assignments',\n  templateUrl: './trainer-assignments.component.html',\n  styleUrls: ['./trainer-assignments.component.css']\n})\nexport class TrainerAssignmentsComponent implements OnInit {\n  loggedIn: any;\n  id: any;\n  groupId: any;\n  msg=\"\";\n  message=\"\";\n  public assign = new Assignments();\n  public assigns:any;\n  public user:any;\n  selectedFiles?: FileList;\n  currentFile?: File;\n  progress = 0;\n  fileInfos?: Observable<any>;\n  curDate =new Date();\n  constructor(private ms:MainserviceService,private route:ActivatedRoute,private gs:GroupServiceService){\n\n  }\n  ngOnInit(): void {\n    this.loggedIn = this.ms.isLoggedIn();\n\n    this.id=this.route.snapshot.paramMap.get('userId');\n    this.groupId=this.route.snapshot.paramMap.get('groupId');\n    this.gs.getAssignments(this.groupId).subscribe(\n      data=>{\n        this.assigns=data;\n      },\n      error=>{\n        this.msg=\"error\";\n      }\n    )\n    this.ms.getUser(this.id).subscribe(\n      data=>{\n           this.user=data;\n      },\n      error=>{\n\n      }\n\n    )\n  }\n\n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n  createAssign(){\n    this.assign.groupId=this.groupId;\n    this.assign.startDate=new Date();\n    this.gs.postAssignment(this.groupId,this.assign).subscribe(\n      data=>{\n      console.log(data);\n      },\n      error=>{\n\n      }\n\n      \n\n      \n    )\n  }\n  uploadAssign(assignId:number): void {\n    this.progress = 0;\n  \n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n  \n      if (file) {\n        this.currentFile = file;\n       \n        this.gs.submitFile(this.currentFile,assignId,this.id).subscribe(\n          (event: any) => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round(100 * event.loaded / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              \n            }\n          },\n          (err: any) => {\n            console.log(err);\n            this.progress = 0;\n  \n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n  \n            this.currentFile = undefined;\n          });\n      }\n  \n      this.selectedFiles = undefined;\n    }\n  }\n\n\n\n\n}\n","<button class=\"btn btn-warning\" style=\"float:right\" data-toggle=\"modal\" type=\"submit\" data-target=\"#addAssign\">Post </button>\n<div *ngIf=\"msg == 'error' \">\n\n    <h1 style=\"color:brown;font-style: oblique;\">No assignments available</h1>\n   \n</div>\n<div *ngIf=\"msg == '' \">\n    <div  class=\"card-deck\" *ngFor=\"let ass of assigns\">\n        <div class=\"card mb-3 border-warning\">\n            <div class=\"card-body shadow-lg\">\n                {{ass.assignName}}   \n                <span style=\"float: right;\">Due time : {{ ass.endDate | date:'dd/MM/yyyy HH:mm:ss'}}</span>\n                <div *ngIf=\"user.role==3\"><button class=\"btn btn-warning\" style=\"float:right\" data-toggle=\"modal\" type=\"submit\" [attr.data-target]=\"'#uploadFile' + ass.assignId\">Submit</button>\n                    <!-------------------------Upload Assignment--------------------------------->\n                    <div class=\"modal fade\" [id]=\"'uploadFile'+ ass.assignId\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel2\" aria-hidden=\"true\">\n                        <div class=\"modal-dialog d-flex justify-content-center\">\n                            <div class=\"modal-content w-75\">\n                                <div class=\"modal-header\">\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel2\">Group Details</h5>\n                                    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                </div>\n                                <div class=\"modal-body p-4\">\n                                    <form  #groupForm=\"ngForm\" (ngSubmit)=\"uploadAssign(ass.assignId)\" enctype=\"multipart/form-data\">\n                                        <!-- Name input -->\n                                        <div class=\"form-outline mb-4\">\n                                            <label class=\"form-label\" >Assignment</label>\n                                            <input type=\"file\" (change)=\"selectFile($event)\" />\n                                           \n                                        </div>\n                                       \n                                        <div *ngIf=\"currentFile\" class=\"progress my-3\">\n                                            <div\n                                              class=\"progress-bar progress-bar-info progress-bar-striped\"\n                                              role=\"progressbar\"\n                                              attr.aria-valuenow=\"{{ progress }}\"\n                                              aria-valuemin=\"0\"\n                                              aria-valuemax=\"100\"\n                                              [ngStyle]=\"{ width: progress + '%' }\"\n                                            >\n                                              {{ progress }}%\n                                            </div>\n                                          </div>\n                                     \n                                    \n                    \n                                        <!-- End Date input -->\n                                        \n                                       \n                    \n                                        <!-- Submit button -->\n                                        <button type=\"submit\" class=\"btn btn-primary btn-block\">Add</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n</div>     \n                </div>\n                </div>\n                </div>\n                </div>\n<!-------------------------------------Assignment Modal----------------------------------------->\n<div class=\"modal fade\" id=\"addAssign\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel2\" aria-hidden=\"true\">\n    <div class=\"modal-dialog d-flex justify-content-center\">\n        <div class=\"modal-content w-75\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel2\">Group Details</h5>\n                <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body p-4\">\n                <form  #groupForm=\"ngForm\" (ngSubmit)=\"createAssign()\">\n                    <!-- Name input -->\n                    <div class=\"form-outline mb-4\">\n                        <label class=\"form-label\" >Assignment</label>\n                        <input [(ngModel)]=\"assign.assignName\" name=\"assignName\" type=\"text\"  class=\"form-control\" />\n                       \n                    </div>\n                   \n                      \n                 \n                \n\n                    <!-- End Date input -->\n                    <div class=\"form-outline mb-4\">\n                        <label class=\"form-label\" for=\"email2\">End Date</label>\n                        <input type=\"datetime-local\" [(ngModel)]=\"assign.endDate\" name=\"endDate\" class=\"form-control\" />\n                        \n                    </div>\n\n                   \n\n                    <!-- Submit button -->\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n                </form>\n                \n                  \n                  <div *ngIf=\"message\" class=\"alert alert-secondary\" role=\"alert\">{{ message }}</div>\n                  \n            </div>\n        </div>\n    </div>\n</div>\n<!-------------------------------------End Modal--------------------------------------->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}