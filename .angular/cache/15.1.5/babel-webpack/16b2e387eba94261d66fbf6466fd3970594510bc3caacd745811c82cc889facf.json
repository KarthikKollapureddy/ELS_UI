{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginUser } from 'src/model/LoginUser.model';\nimport { RegisterUser } from 'src/model/RegisterUser.model';\nlet LoginRegisterComponent = class LoginRegisterComponent {\n  constructor(service, mainservice, router, snackBar) {\n    this.service = service;\n    this.mainservice = mainservice;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.userLogin = new LoginUser();\n    this.userSignup = new RegisterUser();\n    this.isPasswordVisible = false;\n    this.durationInSeconds = 5;\n    this.horizontalPosition = 'right';\n    this.verticalPosition = 'top';\n  }\n  // validateDOB(e:any){\n  //   let year = new Date(e).getFullYear();\n  //   let today = new Date().getFullYear();\n  //   if(today - year >= 100){\n  //    this.msg = 'Are you from future';\n  //    console.log(this.msg);\n  //   }\n  // }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(this.userLogin.userName, [Validators.email, Validators.required]),\n      password: new FormControl(this.userLogin.pass, [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@$%^&)(}{][:;<>,.?/~_+-=|]).{8,15}$')])\n    });\n    this.form1 = new FormGroup({\n      fname: new FormControl(this.userSignup.firstName, [Validators.minLength(4), Validators.maxLength(18), Validators.required]),\n      lname: new FormControl(this.userSignup.lastName, [Validators.minLength(4), Validators.maxLength(18), Validators.required]),\n      email: new FormControl(this.userSignup.userName, [Validators.email, Validators.required]),\n      number: new FormControl(this.userSignup.number, [Validators.maxLength(10), Validators.required, Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')]),\n      dob: new FormControl(this.userSignup.dob, [Validators.required]),\n      gender: new FormControl(this.userSignup.gender, [Validators.required]),\n      password: new FormControl(this.userSignup.pass, [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@$%^&)(}{][:;<>,.?/~_+-=|]).{8,32}$')])\n    });\n  }\n  roleStudent() {\n    this.userSignup.role = 3;\n    console.log(\"role:\" + 3);\n  }\n  roleTrainer() {\n    this.userSignup.role = 2;\n    console.log(\"role:\" + 2);\n  }\n  passwordVisible() {\n    this.isPasswordVisible = true;\n  }\n  submitReg() {\n    if (this.userSignup.role == -1) {\n      this.form1.reset();\n      this.snackBar.open(\"Signup failed, choose a role and sign up again.\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    } else {\n      this.service.registerUser(this.userSignup).subscribe(data => {\n        console.table(data);\n        this.snackBar.open(\"User registered sucesfully, You can now login.\", \"X\", {\n          duration: this.durationInSeconds * 1000,\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition\n        });\n        this.form1.reset();\n      }, error => {\n        let myJsonErr = JSON.parse(JSON.stringify(error));\n        console.log(error);\n        this.snackBar.open(error[\"error\"], \"X\", {\n          duration: this.durationInSeconds * 1000,\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition\n        });\n      });\n    }\n  }\n  submitLogin() {\n    this.service.login(this.userLogin).subscribe(data => {\n      // let notFound = true\n      // this.regUsers=data;\n      // for(let i = 0;i<this.regUsers.length;i++){\n      //   if(this.userLogin.userName==this.regUsers[i].userName && this.userLogin.pass==this.regUsers[i].pass){\n      //     console.log(\"user logged in:\" + this.regUsers[i]);\n      //     notFound = false\n      //     this.snackBar.open(\"login succesfull\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n      //       verticalPosition: this.verticalPosition,})\n      //       // this.router.navigate([\"path\"])\n      //   }\n      //   if(notFound){\n      //     this.snackBar.open(\"login error\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n      //       verticalPosition: this.verticalPosition,})\n      //   }\n      // }\n      // console.log(data)\n      //let myJson = JSON.parse(JSON.stringify(data))\n      console.log(data);\n      // console.log(myJson[0][\"token\"]);\n      // var tok=myJson[0][\"token\"];\n      this.snackBar.open(\"login succesfull\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.mainservice.logUser(data.token);\n      this.mainservice.getUserData(this.userLogin.userName).subscribe(data => {\n        if (data.role == 1) {\n          this.router.navigate(['/admin', data.userId]);\n        }\n        if (data.role == 2) {\n          this.router.navigate(['/trainer', data.userId]);\n        }\n        if (data.role == 3) {\n          this.router.navigate(['/student', data.userId]);\n        }\n      });\n    }, error => {\n      console.log(error);\n      this.snackBar.open(error[\"error\"], \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    });\n  }\n  get email() {\n    return this.form.get('email');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n  get fname() {\n    return this.form1.get('fname');\n  }\n  get lname() {\n    return this.form1.get('lname');\n  }\n  get regEmail() {\n    return this.form1.get('email');\n  }\n  get regPassword() {\n    return this.form1.get('password');\n  }\n  get number() {\n    return this.form1.get('number');\n  }\n  get dob() {\n    return this.form1.get('dob');\n  }\n  get gender() {\n    return this.form1.get('gender');\n  }\n};\nLoginRegisterComponent = __decorate([Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.css']\n})], LoginRegisterComponent);\nexport { LoginRegisterComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","LoginUser","RegisterUser","LoginRegisterComponent","constructor","service","mainservice","router","snackBar","ngOnInit","form","email","userLogin","userName","required","password","pass","pattern","form1","fname","userSignup","firstName","minLength","maxLength","lname","lastName","number","dob","gender","roleStudent","role","console","log","roleTrainer","passwordVisible","isPasswordVisible","submitReg","reset","open","duration","durationInSeconds","horizontalPosition","verticalPosition","registerUser","subscribe","data","table","error","myJsonErr","JSON","parse","stringify","submitLogin","login","logUser","token","getUserData","navigate","userId","get","regEmail","regPassword","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/common/login-register/login-register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginAndRegisterService } from '../../services/login-and-register.service';\n\nimport { MatSnackBar,MatSnackBarHorizontalPosition,MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { LoginUser } from 'src/model/LoginUser.model';\nimport { RegisterUser } from 'src/model/RegisterUser.model';\nimport { MainserviceService } from '../../services/mainservice.service';\n\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.css']\n})\nexport class LoginRegisterComponent implements OnInit {\n\n  constructor(private service:LoginAndRegisterService,private mainservice:MainserviceService,private router:Router,private snackBar: MatSnackBar) { \n    \n  }\n\n\n  userLogin = new LoginUser;\n  userSignup = new RegisterUser;\n  // regUsers:RegisterUser[]=[]\n  form !: FormGroup;\n  form1 !: FormGroup;\n  isPasswordVisible:boolean=false;\n  \n  durationInSeconds = 5;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\nverticalPosition: MatSnackBarVerticalPosition = 'top';\n// validateDOB(e:any){\n//   let year = new Date(e).getFullYear();\n//   let today = new Date().getFullYear();\n//   if(today - year >= 100){\n//    this.msg = 'Are you from future';\n//    console.log(this.msg);\n//   }\n// }\n  ngOnInit(): void {\n \n    \n    this.form = new FormGroup(\n      {\n        email:new FormControl(this.userLogin.userName,[\n          Validators.email,\n          Validators.required\n        ]),\n        password:new FormControl(this.userLogin.pass,[\n          Validators.required,\n          Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@$%^&)(}{][:;<>,.?/~_+-=|]).{8,15}$')\n\n        ])\n      }\n    )\n    \n    this.form1 = new FormGroup({\n      fname : new FormControl(this.userSignup.firstName,[\n        Validators.minLength(4),\n        Validators.maxLength(18),\n        Validators.required\n      ]),\n      lname : new FormControl(this.userSignup.lastName,[\n        Validators.minLength(4),\n        Validators.maxLength(18),\n        Validators.required\n      ]),\n\n      email : new FormControl(this.userSignup.userName,[\n        Validators.email,\n        Validators.required,\n      ]),\n      number : new FormControl(this.userSignup.number,[\n        Validators.maxLength(10),\n        Validators.required,\n        Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')\n      ]),\n\n      dob : new FormControl(this.userSignup.dob,[\n        Validators.required,\n      ]),\n      gender: new FormControl(this.userSignup.gender,[\n        Validators.required,\n      ]),\n    \n      password : new FormControl(this.userSignup.pass,[\n        Validators.required,\n        Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@$%^&)(}{][:;<>,.?/~_+-=|]).{8,32}$')\n      ]),\n\n  })\n\n\n  }\n\n  roleStudent(){\n    this.userSignup.role=3;\n    console.log(\"role:\"+3);\n    \n    \n    \n  }\n  roleTrainer(){\n    this.userSignup.role=2;\n    console.log(\"role:\"+2);\n\n  }\n  passwordVisible(){\n    this.isPasswordVisible=true;\n  }\n\n  submitReg(){\n    \n    \n    if(this.userSignup.role==-1){\n      this.form1.reset();\n      this.snackBar.open(\"Signup failed, choose a role and sign up again.\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition})\n    }\n    else{\n\n    this.service.registerUser(this.userSignup).subscribe(\n      data=>{\n        \n        \n        console.table(data);\n        this.snackBar.open(\"User registered sucesfully, You can now login.\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n          this.form1.reset();\n        \n        \n      },\n      error=>{\n\n        let myJsonErr = JSON.parse(JSON.stringify(error))\n        console.log(error);\n        this.snackBar.open(error[\"error\"],\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n\n        \n      }\n    )\n  }\n}\n\n  submitLogin(){\n    this.service.login(this.userLogin).subscribe(\n      data=>{\n        // let notFound = true\n        // this.regUsers=data;\n        // for(let i = 0;i<this.regUsers.length;i++){\n\n        //   if(this.userLogin.userName==this.regUsers[i].userName && this.userLogin.pass==this.regUsers[i].pass){\n        //     console.log(\"user logged in:\" + this.regUsers[i]);\n        //     notFound = false\n        //     this.snackBar.open(\"login succesfull\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n        //       verticalPosition: this.verticalPosition,})\n        //       // this.router.navigate([\"path\"])\n        //   }\n        //   if(notFound){\n        //     this.snackBar.open(\"login error\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n        //       verticalPosition: this.verticalPosition,})\n        //   }\n          \n        // }\n        // console.log(data)\n        //let myJson = JSON.parse(JSON.stringify(data))\n        console.log(data)\n        // console.log(myJson[0][\"token\"]);\n        // var tok=myJson[0][\"token\"];\n        \n        this.snackBar.open(\"login succesfull\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n              verticalPosition: this.verticalPosition,})\n              this.mainservice.logUser(data.token);\n              this.mainservice.getUserData(this.userLogin.userName).subscribe(\n                data=>{\n                  if(data.role==1){\n                    this.router.navigate(['/admin',data.userId]);\n                  }\n                 if(data.role==2){\n                    this.router.navigate(['/trainer',data.userId]);\n                  }\n                  if(data.role == 3){\n                    this.router.navigate(['/student',data.userId]);\n                  }\n      }\n              )\n    }\n      \n    \n\n      ,\n      error=>{\n        console.log(error);\n        this.snackBar.open(error[\"error\"],\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n        \n      }\n              )\n    \n    \n\n  }\n\n\n  get email() { return this.form.get('email')!; }\n  get password() { return this.form.get('password')!; }\n\n  get fname() { return this.form1.get('fname')!; }\n  get lname() { return this.form1.get('lname')!; }\n  get regEmail() { return this.form1.get('email')!; }\n  get regPassword() { return this.form1.get('password')!; }\n  get number(){return this.form1.get('number')!;}\n  get dob(){return this.form1.get('dob')!;}\n  get gender(){return this.form1.get('gender')!;}\n  \n\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}