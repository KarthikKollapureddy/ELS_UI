{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class StudentServiceService {\n  addFeedback(userId, feed, groupId) {\n    let url = this.baseUrl + \"/addFeed/\" + userId + '/' + groupId;\n    return this.http.post(url, feed);\n  }\n  getGroupRating(groupId) {\n    let url = this.baseUrl + \"/getRating/\" + groupId;\n    return this.http.get(url);\n  }\n  addRate(id, groupId, val) {\n    let url = this.baseUrl + \"/addRating/\" + id + '/' + groupId;\n    return this.http.post(url, val);\n  }\n  deleteStudent(studId) {\n    let url = this.baseUrl + \"/delete/\" + studId;\n    return this.http.delete(url);\n  }\n  getStudentData(id, groupId) {\n    let url = this.baseUrl + \"/getStud/\" + groupId + '/' + id;\n    return this.http.get(url);\n  }\n  getGroupData(id) {\n    let url = this.baseUrl + '/joinedClasses/' + id;\n    return this.http.get(url);\n  }\n  constructor(http, route, router) {\n    this.http = http;\n    this.route = route;\n    this.router = router;\n    this.baseUrl = 'http://localhost:9092/elearning/api/student';\n  }\n  getSuggestions(id) {\n    let url = this.baseUrl + '/suggestions/' + id;\n    return this.http.get(url);\n  }\n  createStudent(stud) {\n    let url = this.baseUrl + '/join/' + stud.userId;\n    return this.http.post(url, stud);\n  }\n}\nStudentServiceService.ɵfac = function StudentServiceService_Factory(t) {\n  return new (t || StudentServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute), i0.ɵɵinject(i2.Router));\n};\nStudentServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentServiceService,\n  factory: StudentServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,qBAAqB;EAChCC,WAAW,CAACC,MAAc,EAAEC,IAAS,EAACC,OAAc;IAClD,IAAIC,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,WAAW,GAACJ,MAAM,GAAC,GAAG,GAACE,OAAO;IACnD,OAAO,IAAI,CAACG,IAAI,CAACC,IAAI,CAACH,GAAG,EAACF,IAAI,CAAC;EACjC;EACAM,cAAc,CAACL,OAAe;IAC5B,IAAIC,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,aAAa,GAACF,OAAO;IAC1C,OAAO,IAAI,CAACG,IAAI,CAACG,GAAG,CAACL,GAAG,CAAC;EAC3B;EACAM,OAAO,CAACC,EAAO,EAAER,OAAe,EAAES,GAAW;IAC3C,IAAIR,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,aAAa,GAACM,EAAE,GAAC,GAAG,GAACR,OAAO;IACjD,OAAO,IAAI,CAACG,IAAI,CAACC,IAAI,CAACH,GAAG,EAACQ,GAAG,CAAC;EAChC;EAEAC,aAAa,CAACC,MAAa;IACzB,IAAIV,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,UAAU,GAACS,MAAM;IACtC,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAACX,GAAG,CAAC;EAC9B;EACAY,cAAc,CAACL,EAAU,EAACR,OAAc;IACtC,IAAIC,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,WAAW,GAACF,OAAO,GAAC,GAAG,GAACQ,EAAE;IAC/C,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAACL,GAAG,CAAC;EAC3B;EACAa,YAAY,CAACN,EAAU;IACrB,IAAIP,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,iBAAiB,GAACM,EAAE;IACzC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAACL,GAAG,CAAC;EAC3B;EAKAc,YAAoBZ,IAAe,EAASa,KAAoB,EAASC,MAAa;IAAlE,SAAI,GAAJd,IAAI;IAAoB,UAAK,GAALa,KAAK;IAAwB,WAAM,GAANC,MAAM;IADvE,YAAO,GAAC,6CAA6C;EAC6B;EAE1FC,cAAc,CAACV,EAAS;IACtB,IAAIP,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,eAAe,GAACM,EAAE;IACvC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAACL,GAAG,CAAC;EAC3B;EAEAkB,aAAa,CAACC,IAAY;IACxB,IAAInB,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,QAAQ,GAACkB,IAAI,CAACtB,MAAM;IACzC,OAAO,IAAI,CAACK,IAAI,CAACC,IAAI,CAACH,GAAG,EAACmB,IAAI,CAAC;EACjC;;AAxCWxB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAyB,SAArBzB,qBAAqB;EAAA0B,YAFpB;AAAM","names":["StudentServiceService","addFeedback","userId","feed","groupId","url","baseUrl","http","post","getGroupRating","get","addRate","id","val","deleteStudent","studId","delete","getStudentData","getGroupData","constructor","route","router","getSuggestions","createStudent","stud","factory","providedIn"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/services/student-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Student } from '../model/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentServiceService {\n  addFeedback(userId: number, feed: any,groupId:number) {\n    let url=this.baseUrl+\"/addFeed/\"+userId+'/'+groupId;\n    return this.http.post(url,feed);\n  }\n  getGroupRating(groupId: number):Observable<any> {\n    let url=this.baseUrl+\"/getRating/\"+groupId;\n    return this.http.get(url);\n  }\n  addRate(id: any, groupId: number, val: number):Observable<any> {\n    let url=this.baseUrl+\"/addRating/\"+id+'/'+groupId;\n    return this.http.post(url,val);\n  }\n  \n  deleteStudent(studId:number) {\n    let url=this.baseUrl+\"/delete/\"+studId;\n    return this.http.delete(url);\n  }\n  getStudentData(id: number,groupId:number) :Observable<any> {\n    let url=this.baseUrl+\"/getStud/\"+groupId+'/'+id;\n    return this.http.get(url);\n  }\n  getGroupData(id: number):Observable<any> {\n    let url=this.baseUrl+'/joinedClasses/'+id;\n    return this.http.get(url);\n  }\n  \n  \n\n  private baseUrl='http://localhost:9092/elearning/api/student';\n  constructor(private http:HttpClient,private route:ActivatedRoute,private router:Router) { }\n\n  getSuggestions(id:number):Observable<any> {\n    let url=this.baseUrl+'/suggestions/'+id;\n    return this.http.get(url);\n  }\n\n  createStudent(stud:Student):Observable<any>{\n    let url=this.baseUrl+'/join/'+stud.userId;\n    return this.http.post(url,stud);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}