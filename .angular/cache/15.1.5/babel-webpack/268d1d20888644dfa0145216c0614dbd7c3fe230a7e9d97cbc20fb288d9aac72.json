{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nimport { Student } from '../../../model/student';\nlet StudentHomeComponent = class StudentHomeComponent {\n  constructor(route, ms, fb, as, ss, router) {\n    this.route = route;\n    this.ms = ms;\n    this.fb = fb;\n    this.as = as;\n    this.ss = ss;\n    this.router = router;\n    this.loggedIn = false;\n    this.msg = '';\n    this.btn = true;\n    this.arr = [\"abcd\", \"qrst\", \"qrstui\"];\n    this.msg1 = '';\n    this.stud = new Student();\n    this.Data = [{\n      name: 'Pear',\n      value: 'pear'\n    }, {\n      name: 'Plum',\n      value: 'plum'\n    }, {\n      name: 'Kiwi',\n      value: 'kiwi'\n    }, {\n      name: 'Apple',\n      value: 'apple'\n    }, {\n      name: 'Lime',\n      value: 'lime'\n    }];\n    this.form = this.fb.group({\n      checkArray: this.fb.array([], [Validators.maxLength(1)])\n    });\n  }\n  ngOnInit() {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.ms.getInterest(this.id).subscribe(data => {\n      //  this.msg=data;\n      this.msg = data.test;\n    }, error => {\n      console.log(error);\n    });\n    this.ss.getSuggestions(this.id).subscribe(data => {\n      this.groups = data;\n      console.log(data);\n    }, error => {\n      this.msg1 = \"Empty\";\n    });\n  }\n  onCheckboxChange(e) {\n    const checkArray = this.form.get('checkArray');\n    if (e.target.checked) {\n      checkArray.push(new FormControl(e.target.value));\n    } else {\n      let i = 0;\n      checkArray.controls.forEach(item => {\n        if (item.value == e.target.value) {\n          checkArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  submitForm() {\n    if (this.form.value.checkArray.length == 3) {\n      this.selectedItems = this.form.value.checkArray;\n      this.ms.saveInterest(this.selectedItems, this.id).subscribe(data => {\n        this.ngOnInit();\n      }, error => {});\n    } else {\n      alert(\"Enter 3 interests\");\n    }\n    console.log(this.form.value);\n  }\n  // checkSize(){\n  //   console.log(this.form.value.checkArray.length );\n  //   if(this.form.value.checkArray.length == 1){\n  //     this.btn=false;\n  //   }\n  //   alert(\"Only one interest\");\n  //   this.btn=true;\n  // }\n  getSub() {\n    this.as.getSubData().subscribe(data => {\n      this.subjects = Object.keys(data).map(e => data[e]);\n    }, error => {\n      console.log(error);\n    });\n  }\n  joinGroup(groupId) {\n    this.stud.groupId = groupId;\n    this.stud.userId = this.id;\n    this.ss.createStudent(this.stud).subscribe(data => {\n      this.router.navigate(['/studClass', this.id, groupId]);\n    }, error => {});\n  }\n};\nStudentHomeComponent = __decorate([Component({\n  selector: 'app-student-home',\n  templateUrl: './student-home.component.html',\n  styleUrls: ['./student-home.component.css']\n})], StudentHomeComponent);\nexport { StudentHomeComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","FormControl","Student","StudentHomeComponent","constructor","route","ms","fb","as","ss","router","name","value","form","group","checkArray","array","maxLength","ngOnInit","loggedIn","isLoggedIn","id","snapshot","paramMap","get","getInterest","subscribe","data","msg","test","error","console","log","getSuggestions","groups","msg1","onCheckboxChange","e","target","checked","push","i","controls","forEach","item","removeAt","submitForm","length","selectedItems","saveInterest","alert","getSub","getSubData","subjects","Object","keys","map","joinGroup","groupId","stud","userId","createStudent","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/student/student-home/student-home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { MainserviceService } from '../../../services/mainservice.service';\nimport { Student } from '../../../model/student';\nimport { StudentServiceService } from '../../../services/student-service.service';\n\n@Component({\n  selector: 'app-student-home',\n  templateUrl: './student-home.component.html',\n  styleUrls: ['./student-home.component.css']\n})\nexport class StudentHomeComponent implements OnInit{\n\n  public loggedIn =false;\n  public id:any;\n  msg='';\n  btn:boolean=true;\n  arr =[\"abcd\",\"qrst\",\"qrstui\"];\n msg1='';\n public stud=new Student();\n  \n  subjects:any;\n  public groups:any;\n\n  constructor(private route:ActivatedRoute,private ms:MainserviceService,private fb: FormBuilder,private as:AdminServiceService,private ss:StudentServiceService,private router:Router){\n    this.form = this.fb.group({\n      checkArray: this.fb.array([], [Validators.maxLength(1)]),\n      \n    });\n\n    \n  }\n  \n  \n  ngOnInit(): void {\n    \n    this.loggedIn = this.ms.isLoggedIn();\n    this.id=this.route.snapshot.paramMap.get('userId');\n   \n    this.ms.getInterest(this.id).subscribe(\n\n      data=>{\n        //  this.msg=data;\n        \n        this.msg=data.test;\n      },\n      error=>{\n         console.log(error);\n      }\n      \n\n    )\n\n    this.ss.getSuggestions(this.id).subscribe(\n      data=>{\n         this.groups=data;\n         console.log(data);\n      },\n      error=>{\n       this.msg1=\"Empty\";\n      }\n    )\n\n    \n\n    \n  }\n   selectedItems!:any[];\n   \n  form: FormGroup;\n  Data: Array<any> = [\n    { name: 'Pear', value: 'pear' },\n    { name: 'Plum', value: 'plum' },\n    { name: 'Kiwi', value: 'kiwi' },\n    { name: 'Apple', value: 'apple' },\n    { name: 'Lime', value: 'lime' },\n  ];\n  \n  onCheckboxChange(e: any) {\n    const checkArray: FormArray = this.form.get('checkArray') as FormArray;\n\n    if (e.target.checked) {\n      checkArray.push(new FormControl(e.target.value));\n    } else {\n      let i: number = 0;\n     checkArray.controls.forEach((item: any) => {\n        if (item.value == e.target.value) {\n         checkArray.removeAt(i);\n        \n          return;\n        }\n        i++;\n      });\n    }\n  }\n  submitForm() {\n    if(this.form.value.checkArray.length==3){\n     this.selectedItems=this.form.value.checkArray;\n     this.ms.saveInterest(this.selectedItems,this.id).subscribe(\n      data=>{\n            this.ngOnInit();\n      },\n      error=>{\n\n      }\n     )\n    }\n    else{\n      alert(\"Enter 3 interests\");\n    }\n\n    console.log(this.form.value);\n  }\n\n  \n  // checkSize(){\n  //   console.log(this.form.value.checkArray.length );\n    \n  //   if(this.form.value.checkArray.length == 1){\n     \n  //     this.btn=false;\n  //   }\n  //   alert(\"Only one interest\");\n  //   this.btn=true;\n\n  // }\n  getSub(){\n    this.as.getSubData().subscribe(\n      data=>{\n        \n         this.subjects=Object.keys(data).map(e=>data[e]);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n  }\n\n  joinGroup(groupId:number){\n    this.stud.groupId=groupId;\n    this.stud.userId=this.id;\n    this.ss.createStudent(this.stud).subscribe(\n      data=>{\n        this.router.navigate(['/studClass',this.id,groupId]);\n      },\n      error=>{\n\n      }\n    )\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}