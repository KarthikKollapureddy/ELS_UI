{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PeopleComponentComponent = class PeopleComponentComponent {\n  constructor(ms, route, ss, gs, ts, snackBar) {\n    this.ms = ms;\n    this.route = route;\n    this.ss = ss;\n    this.gs = gs;\n    this.ts = ts;\n    this.snackBar = snackBar;\n    this.durationInSeconds = 5;\n    this.horizontalPosition = 'right';\n    this.verticalPosition = 'top';\n  }\n  ngOnInit() {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.groupId = this.route.snapshot.paramMap.get('groupId');\n    this.gs.getPeopleData(this.groupId).subscribe(data => {\n      this.people = data;\n      console.table(this.people);\n    }, error => {});\n    this.ts.getClassData(this.groupId).subscribe(data => {\n      this.class = data;\n    }, error => {});\n    this.ms.getUser(this.id).subscribe(data => {\n      this.user = data;\n    }, error => {});\n  }\n  addFeed(userId) {\n    this.ss.addFeedback(userId, this.feed, this.groupId).subscribe(data => {\n      this.snackBar.open(\"Feedback added successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    }, error => {\n      this.snackBar.open(error[\"error\"], \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    });\n  }\n  getFeed() {\n    this.ss.getStudentData(this.id, this.groupId).subscribe(data => {\n      this.stud = data;\n    }, error => {});\n  }\n};\nPeopleComponentComponent = __decorate([Component({\n  selector: 'app-people-component',\n  templateUrl: './people-component.component.html',\n  styleUrls: ['./people-component.component.css']\n})], PeopleComponentComponent);\nexport { PeopleComponentComponent };","map":{"version":3,"mappings":"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","names":["Component","PeopleComponentComponent","constructor","ms","route","ss","gs","ts","snackBar","ngOnInit","loggedIn","isLoggedIn","id","snapshot","paramMap","get","groupId","getPeopleData","subscribe","data","people","console","table","error","getClassData","class","getUser","user","addFeed","userId","addFeedback","feed","open","duration","durationInSeconds","horizontalPosition","verticalPosition","getFeed","getStudentData","stud","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/common/people-component/people-component.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { Group } from 'src/model/group';\nimport { RegisterUser } from 'src/model/RegisterUser.model';\nimport { GroupServiceService } from '../../../services/group-service.service';\nimport { MainserviceService } from '../../../services/mainservice.service';\nimport { StudentServiceService } from '../../../services/student-service.service';\nimport { TrainerServiceService } from '../../../services/trainer-service.service';\n\n@Component({\n  selector: 'app-people-component',\n  templateUrl: './people-component.component.html',\n  styleUrls: ['./people-component.component.css']\n})\nexport class PeopleComponentComponent implements OnInit {\n\n  public loggedIn:any;\n  public groupId:any;\n  public id:any;\n  public people:any;\n  public class:any;\n  public user:any;\n  public stud:any;\n  public feed:any;\n  durationInSeconds = 5;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\nverticalPosition: MatSnackBarVerticalPosition = 'top';\n  constructor(private ms:MainserviceService,private route:ActivatedRoute,private ss:StudentServiceService,private gs:GroupServiceService,private ts:TrainerServiceService,private snackBar:MatSnackBar){\n\n  }\n  ngOnInit(): void {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id=this.route.snapshot.paramMap.get('userId');\n    this.groupId=this.route.snapshot.paramMap.get('groupId');\n\n    \n    this.gs.getPeopleData(this.groupId).subscribe(\n      data=>{\n        this.people=data;\n        console.table(this.people);\n      },\n      error=>{\n\n      }\n\n      \n    )\n\n    this.ts.getClassData(this.groupId).subscribe(\n      data=>{\n        this.class=data;\n      },\n      error=>{\n\n      }\n    )\n    this.ms.getUser(this.id).subscribe(\n      data=>{\n        this.user=data;\n      },\n      error=>{\n\n      }\n    )\n\n  }\n\n  addFeed(userId:number){\n    this.ss.addFeedback(userId,this.feed,this.groupId).subscribe(\n      data=>{\n        this.snackBar.open(\"Feedback added successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n\n      },\n      error=>{\n        this.snackBar.open(error[\"error\"],\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n      }\n    )\n   \n  }\n\n  getFeed(){\n    this.ss.getStudentData(this.id,this.groupId).subscribe(\n      data=>{\n         this.stud=data;\n      },\n      error=>{\n\n      }\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}