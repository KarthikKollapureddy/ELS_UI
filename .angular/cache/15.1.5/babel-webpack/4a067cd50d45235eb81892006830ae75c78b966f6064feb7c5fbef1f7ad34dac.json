{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Group } from '../../../model/group';\nlet TrainerHomeComponent = class TrainerHomeComponent {\n  constructor(router, route, ms, fb, as, ts, snackBar) {\n    this.router = router;\n    this.route = route;\n    this.ms = ms;\n    this.fb = fb;\n    this.as = as;\n    this.ts = ts;\n    this.snackBar = snackBar;\n    this.loggedIn = false;\n    this.msg = '';\n    this.btn = true;\n    this.arr = [\"abcd\", \"qrst\", \"qrstui\"];\n    this.gr = new Group();\n    this.durationInSeconds = 5;\n    this.horizontalPosition = 'right';\n    this.verticalPosition = 'top';\n    this.Data = [{\n      name: 'Pear',\n      value: 'pear'\n    }, {\n      name: 'Plum',\n      value: 'plum'\n    }, {\n      name: 'Kiwi',\n      value: 'kiwi'\n    }, {\n      name: 'Apple',\n      value: 'apple'\n    }, {\n      name: 'Lime',\n      value: 'lime'\n    }];\n    this.form = this.fb.group({\n      checkArray: this.fb.array([], [Validators.maxLength(1)])\n    });\n  }\n  ngOnInit() {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.ms.getInterest(this.id).subscribe(data => {\n      //  this.msg=data;\n      this.msg = data.test;\n    }, error => {\n      console.log(error);\n    });\n  }\n  onCheckboxChange(e) {\n    const checkArray = this.form.get('checkArray');\n    if (e.target.checked) {\n      checkArray.push(new FormControl(e.target.value));\n    } else {\n      let i = 0;\n      checkArray.controls.forEach(item => {\n        if (item.value == e.target.value) {\n          checkArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  submitForm() {\n    if (this.form.value.checkArray.length == 3) {\n      this.selectedItems = this.form.value.checkArray;\n      this.ms.saveInterest(this.selectedItems, this.id).subscribe(data => {}, error => {});\n    } else {\n      alert(\"Enter 3 interests\");\n    }\n    console.log(this.form.value);\n  }\n  // checkSize(){\n  //   console.log(this.form.value.checkArray.length );\n  //   if(this.form.value.checkArray.length == 1){\n  //     this.btn=false;\n  //   }\n  //   alert(\"Only one interest\");\n  //   this.btn=true;\n  // }\n  getSub() {\n    this.as.getSubData().subscribe(data => {\n      this.subjects = Object.keys(data).map(e => data[e]);\n    }, error => {\n      console.log(error);\n    });\n  }\n  createGroup(id) {\n    this.gr.trainerId = id;\n    this.ts.insertGroup(this.gr, id).subscribe(data => {\n      this.snackBar.open(\"Created successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.router.na;\n    }, error => {});\n    console.log(this.gr);\n  }\n  getInfo() {\n    this.getSub();\n    this.as.getGradData().subscribe(data => {\n      this.grades = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nTrainerHomeComponent = __decorate([Component({\n  selector: 'app-trainer-home',\n  templateUrl: './trainer-home.component.html',\n  styleUrls: ['./trainer-home.component.css']\n})], TrainerHomeComponent);\nexport { TrainerHomeComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","Group","TrainerHomeComponent","constructor","router","route","ms","fb","as","ts","snackBar","name","value","form","group","checkArray","array","maxLength","ngOnInit","loggedIn","isLoggedIn","id","snapshot","paramMap","get","getInterest","subscribe","data","msg","test","error","console","log","onCheckboxChange","e","target","checked","push","i","controls","forEach","item","removeAt","submitForm","length","selectedItems","saveInterest","alert","getSub","getSubData","subjects","Object","keys","map","createGroup","gr","trainerId","insertGroup","open","duration","durationInSeconds","horizontalPosition","verticalPosition","na","getInfo","getGradData","grades","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/trainer/trainer-home/trainer-home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Route } from '@angular/router';\nimport { AdminServiceService } from '../../services/admin-service.service';\nimport { Group } from '../../../model/group';\nimport { MainserviceService } from '../../services/mainservice.service';\nimport { TrainerServiceService } from '../../services/trainer-service.service';\n\n@Component({\n  selector: 'app-trainer-home',\n  templateUrl: './trainer-home.component.html',\n  styleUrls: ['./trainer-home.component.css']\n})\nexport class TrainerHomeComponent implements OnInit{\n  public loggedIn =false;\n  public id:any;\n  msg='';\n  btn:boolean=true;\n  arr =[\"abcd\",\"qrst\",\"qrstui\"];\n  public gr=new Group();\n  \n  subjects : any;\n  grades : any;\n  durationInSeconds = 5;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\nverticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(private router:Route,private route:ActivatedRoute,private ms:MainserviceService,private fb: FormBuilder,private as:AdminServiceService,private ts:TrainerServiceService,private snackBar:MatSnackBar){\n    this.form = this.fb.group({\n      checkArray: this.fb.array([], [Validators.maxLength(1)]),\n      \n    });\n\n    \n  }\n  \n  \n  ngOnInit(): void {\n    \n    this.loggedIn = this.ms.isLoggedIn();\n    this.id=this.route.snapshot.paramMap.get('userId');\n   \n    this.ms.getInterest(this.id).subscribe(\n\n      data=>{\n        //  this.msg=data;\n        \n        this.msg=data.test;\n      },\n      error=>{\n         console.log(error);\n      }\n      \n\n    )\n\n    \n  }\n   selectedItems!:any[];\n   \n  form: FormGroup;\n  Data: Array<any> = [\n    { name: 'Pear', value: 'pear' },\n    { name: 'Plum', value: 'plum' },\n    { name: 'Kiwi', value: 'kiwi' },\n    { name: 'Apple', value: 'apple' },\n    { name: 'Lime', value: 'lime' },\n  ];\n  \n  onCheckboxChange(e: any) {\n    const checkArray: FormArray = this.form.get('checkArray') as FormArray;\n\n    if (e.target.checked) {\n      checkArray.push(new FormControl(e.target.value));\n    } else {\n      let i: number = 0;\n     checkArray.controls.forEach((item: any) => {\n        if (item.value == e.target.value) {\n         checkArray.removeAt(i);\n        \n          return;\n        }\n        i++;\n      });\n    }\n  }\n  submitForm() {\n    if(this.form.value.checkArray.length==3){\n     this.selectedItems=this.form.value.checkArray;\n     this.ms.saveInterest(this.selectedItems,this.id).subscribe(\n      data=>{\n\n      },\n      error=>{\n\n      }\n     )\n    }\n    else{\n      alert(\"Enter 3 interests\");\n    }\n\n    console.log(this.form.value);\n  }\n\n  \n  // checkSize(){\n  //   console.log(this.form.value.checkArray.length );\n    \n  //   if(this.form.value.checkArray.length == 1){\n     \n  //     this.btn=false;\n  //   }\n  //   alert(\"Only one interest\");\n  //   this.btn=true;\n\n  // }\n  getSub(){\n    this.as.getSubData().subscribe(\n      data=>{\n        \n         this.subjects=Object.keys(data).map(e=>data[e]);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n  }\n\n  createGroup(id:number){\n   this.gr.trainerId=id;\n   this.ts.insertGroup(this.gr,id).subscribe(\n    data=>{\n      this.snackBar.open(\"Created successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition})\n        this.router.na\n    },\n    error=>{\n      \n    }\n   )\n    console.log(this.gr)\n\n  }\n\n  getInfo(){\n    this.getSub();\n    this.as.getGradData().subscribe(\n      data=>{\n        this.grades=data;\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}