{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Grade } from '../../../model/grade';\nimport { Group } from '../../../model/group';\nimport { Subject } from 'src/model/subject';\nlet TrainerClassComponent = class TrainerClassComponent {\n  constructor(route, priavte, snackBar, ms, as, ts, ss, router) {\n    this.route = route;\n    this.ms = ms;\n    this.as = as;\n    this.ts = ts;\n    this.ss = ss;\n    this.router = router;\n    this.loggedIn = false;\n    this.class = new Group();\n    this.sub = new Subject();\n    this.grade = new Grade();\n    this.subjects = [];\n    this.rating = 0;\n    this.stars = Array(5).fill(false);\n    this.peopleVisible = false;\n    this.quesAndAnsVisible = false;\n    this.fileVisible = false;\n    this.assignVisible = false;\n  }\n  ngOnInit() {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.groupId = this.route.snapshot.paramMap.get('groupId');\n    this.ts.getClassData(this.groupId).subscribe(data => {\n      this.class = data;\n      this.as.getGrade(this.class.groupGrad).subscribe(data => {\n        this.grade = data;\n        for (let i = 0; i < this.class.rating; i++) {\n          this.stars[0] = true;\n        }\n        console.log(data);\n      }, error => {\n        console.log(error);\n      });\n      this.as.getSub(this.class.groupSub).subscribe(data => {\n        this.sub = data;\n        console.log(data);\n      }, error => {\n        console.log(error);\n      });\n      this.ss.getGroupRating(this.groupId).subscribe(data => {\n        var s = 0;\n        this.students = data;\n        for (let i = 0; i < this.students.length; i++) {\n          s = s + this.students[i].rating;\n        }\n        this.rating = s / this.students.length;\n        for (let j = 0; j < this.rating; j++) {\n          this.stars[j] = true;\n        }\n      }, error => {});\n    }, error => {\n      console.log(error);\n    });\n    console.log(this.class);\n  }\n  trainer() {\n    this.peopleVisible = true;\n    this.quesAndAnsVisible = false;\n    this.fileVisible = false;\n    this.assignVisible = false;\n  }\n  qna() {\n    this.quesAndAnsVisible = true;\n    this.peopleVisible = false;\n    this.fileVisible = false;\n    this.assignVisible = false;\n  }\n  file() {\n    this.fileVisible = true;\n    this.peopleVisible = false;\n    this.quesAndAnsVisible = false;\n    this.assignVisible = false;\n  }\n  assign() {\n    this.assignVisible = true;\n    this.peopleVisible = false;\n    this.quesAndAnsVisible = false;\n    this.fileVisible = false;\n  }\n  reload() {\n    this.ngOnInit();\n  }\n  getInfo() {\n    this.as.getSubData().subscribe(data => {\n      this.subjects = Object.keys(data).map(e => data[e]);\n    }, error => {\n      console.log(error);\n    });\n    this.as.getGradData().subscribe(data => {\n      this.grades = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  editGroup(groupId) {\n    this.ts.editGroup(this.class, this.groupId).subscribe(data => {\n      this.ngOnInit();\n    }, error => {});\n  }\n  deleteGroup(groupId) {\n    this.ts.deleteGroup(groupId).subscribe(data => {\n      this.router.navigate(['/trainerGroup', this.id]);\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nTrainerClassComponent = __decorate([Component({\n  selector: 'app-trainer-class',\n  templateUrl: './trainer-class.component.html',\n  styleUrls: ['./trainer-class.component.css']\n})], TrainerClassComponent);\nexport { TrainerClassComponent };","map":{"version":3,"mappings":"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","names":["Component","Grade","Group","Subject","TrainerClassComponent","constructor","route","priavte","snackBar","ms","as","ts","ss","router","Array","fill","ngOnInit","loggedIn","isLoggedIn","id","snapshot","paramMap","get","groupId","getClassData","subscribe","data","class","getGrade","groupGrad","grade","i","rating","stars","console","log","error","getSub","groupSub","sub","getGroupRating","s","students","length","j","trainer","peopleVisible","quesAndAnsVisible","fileVisible","assignVisible","qna","file","assign","reload","getInfo","getSubData","subjects","Object","keys","map","e","getGradData","grades","editGroup","deleteGroup","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/trainer/trainer-class/trainer-class.component.ts"],"sourcesContent":["import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminServiceService } from '../../services/admin-service.service';\nimport { Grade } from '../../../model/grade';\nimport { Group } from '../../../model/group';\nimport { MainserviceService } from '../../services/mainservice.service';\nimport { StudentServiceService } from '../../services/student-service.service';\nimport { TrainerServiceService } from '../../services/trainer-service.service';\nimport { Subject } from 'src/model/subject';\n\n@Component({\n  selector: 'app-trainer-class',\n  templateUrl: './trainer-class.component.html',\n  styleUrls: ['./trainer-class.component.css']\n})\nexport class TrainerClassComponent implements OnInit{\n  public loggedIn =false;\n  public groupId:any;\n  public id:any;\n  public class=new Group;\n  public sub:Subject=new Subject();\n  public grade=new Grade();\n  public grades:any;\n  public subjects:Subject[]=[];\n  public students:any;\n  public rating=0;\n  public stars: boolean[] = Array(5).fill(false);\n  public peopleVisible:boolean=false;\n  public quesAndAnsVisible:boolean=false;\n  public fileVisible:boolean=false;\n  public assignVisible:boolean=false;\n  constructor(private route:ActivatedRoute,priavte snackBar:mat\n    private ms:MainserviceService,private as:AdminServiceService,private ts:TrainerServiceService,private ss:StudentServiceService,private router:Router){  \n\n  }\n  \n  ngOnInit(): void {\n    this.loggedIn = this.ms.isLoggedIn();\n\n    this.id=this.route.snapshot.paramMap.get('userId');\n    this.groupId=this.route.snapshot.paramMap.get('groupId');\n    \n    this.ts.getClassData(this.groupId).subscribe(\n      data=>{\n          this.class=data;\n          this.as.getGrade(this.class.groupGrad).subscribe(\n            data=>{\n                 this.grade=data;\n                 for(let i=0;i<this.class.rating;i++){\n                   this.stars[0]=true;\n                 }\n                 console.log(data);\n            },\n            error=>{\n              console.log(error);\n            }\n          )\n\n          this.as.getSub(this.class.groupSub).subscribe(\n            data=>{\n              this.sub=data;\n              console.log(data);\n            },\n            error=>{\n              console.log(error)\n      \n            }\n          )\n\n          this.ss.getGroupRating(this.groupId).subscribe(\n            data=>{\n              var s=0;\n              this.students=data;\n             for(let i=0;i<this.students.length;i++){\n              s=s+this.students[i].rating;\n             }\n             this.rating=s/this.students.length;\n             for(let j=0;j<this.rating;j++){\n              this.stars[j]=true;\n             }\n             \n            },\n            error=>{\n      \n            }\n          )\n          \n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    \n    console.log(this.class);\n    \n   \n   \n  }\n\n  trainer(){\n    this.peopleVisible=true;\n    this.quesAndAnsVisible=false\n    this.fileVisible=false\n    this.assignVisible=false\n    \n  }\n  qna(){\n    this.quesAndAnsVisible=true;\n    this.peopleVisible=false\n    this.fileVisible=false\n    this.assignVisible=false\n   \n  }\n  file(){\n    this.fileVisible=true;\n    this.peopleVisible=false\n    this.quesAndAnsVisible=false\n    this.assignVisible=false\n\n   \n  }\n  assign(){\n    this.assignVisible=true;\n    this.peopleVisible=false\n    this.quesAndAnsVisible=false\n    this.fileVisible=false\n  }\n\n  reload(){\n    this.ngOnInit();\n  }\n\n  getInfo(){\n    this.as.getSubData().subscribe(\n      data=>{\n        \n         this.subjects=Object.keys(data).map(e=>data[e]);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    this.as.getGradData().subscribe(\n      data=>{\n        this.grades=data;\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    \n  }\n\n  editGroup(groupId:number){\n    this.ts.editGroup(this.class,this.groupId).subscribe(\n      data=>{\n           this.ngOnInit();\n      },\n      error=>{\n\n      }\n\n    )\n  }\n\n  deleteGroup(groupId:number){\n\n    this.ts.deleteGroup(groupId).subscribe(\n      data=>{\n\n        this.router.navigate(['/trainerGroup',this.id]);\n        \n\n      },\n      error=>{\n        console.log(error);\n        \n      }\n    )\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}