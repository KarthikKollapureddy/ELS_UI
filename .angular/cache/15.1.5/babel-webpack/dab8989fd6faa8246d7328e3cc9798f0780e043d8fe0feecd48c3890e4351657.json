{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AdminServiceService {\n  constructor(http, route, router) {\n    this.http = http;\n    this.route = route;\n    this.router = router;\n    this.baseUrl = 'http://localhost:9098/elearning/api/admin';\n  }\n  getGrade(groupGrad) {\n    let url = this.baseUrl + '/getGrade/' + groupGrad;\n    return this.http.get(url);\n  }\n  getSub(groupSub) {\n    let url = this.baseUrl + '/getSubject/' + groupSub;\n    return this.http.get(url);\n  }\n  getGradData() {\n    let url = this.baseUrl + '/getGrades';\n    return this.http.get(url);\n  }\n  getData() {\n    let url = this.baseUrl + '/getInfo';\n    return this.http.get(url);\n  }\n  addGrade(grad) {\n    let url = this.baseUrl + '/addGrades';\n    return this.http.post(url, grad);\n  }\n  deleteGrade(gradId) {\n    let url = this.baseUrl + '/deleteGrad/' + gradId;\n    return this.http.delete(url);\n  }\n  editGrade(gradId, gradName) {\n    let url = this.baseUrl + '/editGrad/' + gradId;\n    return this.http.patch(url, gradName);\n  }\n  deleteSubject(subId) {\n    let url = this.baseUrl + '/deleteSub/' + subId;\n    return this.http.delete(url);\n  }\n  editSubject(subId, subName) {\n    let url = this.baseUrl + '/editSub/' + subId;\n    return this.http.patch(url, subName);\n  }\n  getSubData() {\n    let url = this.baseUrl + '/getSubjects';\n    return this.http.get(url);\n  }\n  addSub(sub) {\n    let url = this.baseUrl + '/addSubject';\n    return this.http.post(url, sub);\n  }\n}\nAdminServiceService.ɵfac = function AdminServiceService_Factory(t) {\n  return new (t || AdminServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute), i0.ɵɵinject(i2.Router));\n};\nAdminServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminServiceService,\n  factory: AdminServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,mBAAmB;EAM9BC,YAAoBC,IAAe,EAASC,KAAoB,EAASC,MAAa;IAAlE,SAAI,GAAJF,IAAI;IAAoB,UAAK,GAALC,KAAK;IAAwB,WAAM,GAANC,MAAM;IADvE,YAAO,GAAC,2CAA2C;EAC+B;EAGnFC,QAAQ,CAACC,SAAiB;IAC/B,IAAIC,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,YAAY,GAACF,SAAS;IAC3C,OAAO,IAAI,CAACJ,IAAI,CAACO,GAAG,CAACF,GAAG,CAAC;EAC3B;EAEOG,MAAM,CAACC,QAAgB;IAC5B,IAAIJ,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,cAAc,GAACG,QAAQ;IAC5C,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAACF,GAAG,CAAC;EAC3B;EAGOK,WAAW;IAChB,IAAIL,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,YAAY;IACjC,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACF,GAAG,CAAC;EAE3B;EACOM,OAAO;IACZ,IAAIN,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,UAAU;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACF,GAAG,CAAC;EAC3B;EAEOO,QAAQ,CAACC,IAAU;IACxB,IAAIR,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,YAAY;IACjC,OAAO,IAAI,CAACN,IAAI,CAACc,IAAI,CAACT,GAAG,EAACQ,IAAI,CAAC;EACjC;EACOE,WAAW,CAACC,MAAc;IAC/B,IAAIX,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,cAAc,GAACU,MAAM;IAC1C,OAAO,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAACZ,GAAG,CAAC;EAC9B;EACAa,SAAS,CAACF,MAAc,EAACG,QAAiB;IACxC,IAAId,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,YAAY,GAACU,MAAM;IACxC,OAAO,IAAI,CAAChB,IAAI,CAACoB,KAAK,CAACf,GAAG,EAACc,QAAQ,CAAC;EAEtC;EAIAE,aAAa,CAACC,KAAa;IACzB,IAAIjB,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,aAAa,GAACgB,KAAK;IACxC,OAAO,IAAI,CAACtB,IAAI,CAACiB,MAAM,CAACZ,GAAG,CAAC;EAC9B;EACAkB,WAAW,CAACD,KAAa,EAACE,OAAgB;IACxC,IAAInB,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,WAAW,GAACgB,KAAK;IACtC,OAAO,IAAI,CAACtB,IAAI,CAACoB,KAAK,CAACf,GAAG,EAACmB,OAAO,CAAC;EAErC;EAIOC,UAAU;IACf,IAAIpB,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,cAAc;IACnC,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACF,GAAG,CAAC;EAE3B;EAEOqB,MAAM,CAACC,GAAW;IACvB,IAAItB,GAAG,GAAC,IAAI,CAACC,OAAO,GAAC,aAAa;IAClC,OAAO,IAAI,CAACN,IAAI,CAACc,IAAI,CAACT,GAAG,EAACsB,GAAG,CAAC;EAChC;;AAnEW7B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAA8B,SAAnB9B,mBAAmB;EAAA+B,YAFlB;AAAM","names":["AdminServiceService","constructor","http","route","router","getGrade","groupGrad","url","baseUrl","get","getSub","groupSub","getGradData","getData","addGrade","grad","post","deleteGrade","gradId","delete","editGrade","gradName","patch","deleteSubject","subId","editSubject","subName","getSubData","addSub","sub","factory","providedIn"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/services/admin-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Grade } from '../../model/grade';\nimport { Subject } from '../../model/subject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminServiceService {\n  \n  \n  \n\n  private baseUrl='http://localhost:9098/elearning/api/admin';\n  constructor(private http:HttpClient,private route:ActivatedRoute,private router:Router) { }\n\n\n  public getGrade(groupGrad: number):Observable<any> {\n    let url=this.baseUrl+'/getGrade/'+groupGrad;\n    return this.http.get(url);\n  }\n\n  public getSub(groupSub: number) :Observable<any>{\n    let url=this.baseUrl+'/getSubject/'+groupSub;\n    return this.http.get(url);\n  }\n\n\n  public getGradData() :Observable<any> {\n    let url=this.baseUrl+'/getGrades';\n    return this.http.get(url);\n\n  }\n  public getData()  : Observable<any>{\n    let url=this.baseUrl+'/getInfo';\n    return this.http.get(url);\n  }\n\n  public addGrade(grad:Grade):Observable<any>{\n    let url=this.baseUrl+'/addGrades';\n    return this.http.post(url,grad);\n  }\n  public deleteGrade(gradId: number) : Observable<any>{\n    let url=this.baseUrl+'/deleteGrad/'+gradId;\n    return this.http.delete(url);\n  }\n  editGrade(gradId: number,gradName : string):Observable<any> {\n    let url=this.baseUrl+'/editGrad/'+gradId;\n    return this.http.patch(url,gradName);\n    \n  }\n   \n\n\n  deleteSubject(subId: number) {\n    let url=this.baseUrl+'/deleteSub/'+subId;\n    return this.http.delete(url);\n  }\n  editSubject(subId: number,subName : string):Observable<any> {\n    let url=this.baseUrl+'/editSub/'+subId;\n    return this.http.patch(url,subName);\n    \n  }\n\n  \n\n  public getSubData() :Observable<any> {\n    let url=this.baseUrl+'/getSubjects';\n    return this.http.get(url);\n\n  }\n\n  public addSub(sub:Subject):Observable<any>{\n    let url=this.baseUrl+'/addSubject';\n    return this.http.post(url,sub);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}