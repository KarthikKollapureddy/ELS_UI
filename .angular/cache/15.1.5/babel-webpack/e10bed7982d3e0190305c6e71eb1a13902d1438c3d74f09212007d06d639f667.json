{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Question } from '../../../model/question';\nimport { Answer } from '../../../model/answer';\nlet QuestionsAndAnswersComponent = class QuestionsAndAnswersComponent {\n  constructor(ms, route, ss, gs, ts, snackBar) {\n    this.ms = ms;\n    this.route = route;\n    this.ss = ss;\n    this.gs = gs;\n    this.ts = ts;\n    this.snackBar = snackBar;\n    this.msg = '';\n    this.durationInSeconds = 5;\n    this.horizontalPosition = 'right';\n    this.verticalPosition = 'top';\n    this.ques = new Question();\n    this.ans = new Answer();\n  }\n  ngOnInit() {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.groupId = this.route.snapshot.paramMap.get('groupId');\n    console.log(this.groupId);\n    // this.gs.getQuestions(this.groupId).subscribe(\n    //   data=>{\n    //     console.log(data);\n    //   },\n    //   error=>{\n    //      this.msg=\"error\";\n    //   }\n    // )\n    this.gs.getQuestions(this.groupId).subscribe(data => {\n      this.questions = data;\n      console.table(data);\n    }, error => {\n      this.msg = 'error';\n    });\n  }\n  addQues() {\n    this.ques.groupId = this.groupId;\n    this.ques.userId = this.id;\n    console.log(this.ques);\n    this.gs.addQuestion(this.ques).subscribe(data => {\n      this.snackBar.open(\"Added successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n      console.log(\"hiw\");\n    }, error => {\n      this.snackBar.open(\"Problem occured\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    });\n  }\n  addAns(questionId) {\n    this.ans.questionId = questionId;\n    this.ans.userId = this.id;\n    this.gs.addAnswer(this.ans).subscribe(data => {\n      this.snackBar.open(\"Added successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n    }, error => {\n      this.snackBar.open(\"Problem occured\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    });\n  }\n  editQues(questionId) {\n    this.gs.editQuestion(questionId, this.questionName).subscribe(data => {\n      this.snackBar.open(\"Edited successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n    }, error => {\n      this.snackBar.open(\"Problem occured\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    });\n  }\n  editAns(answerId) {\n    this.gs.editAnswer(answerId, this.answerName).subscribe(data => {\n      this.snackBar.open(\"Edited successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n    }, error => {\n      this.snackBar.open(\"Problem occured\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    });\n  }\n  reload() {\n    this.ngOnInit();\n  }\n  delete(questionId) {\n    this.gs.deleteQuestion(questionId).subscribe(data => {\n      this.snackBar.open(\"Deleted successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      // this.ngOnInit();\n    }, error => {\n      this.snackBar.open(\"Problem occured\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n    });\n  }\n  deleteAns(answerId) {\n    this.gs.deleteAnswer(answerId).subscribe(data => {\n      this.snackBar.open(\"Deleted successfully\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n    }, error => {\n      this.snackBar.open(\"Problem occured\", \"X\", {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n      this.ngOnInit();\n    });\n  }\n  getAnswers(questionId) {\n    this.answers = [];\n    this.msg1 = '';\n    this.gs.getAnswers(questionId).subscribe(data => {\n      this.answers = data;\n    }, error => {\n      this.msg1 = 'not found';\n    });\n  }\n};\nQuestionsAndAnswersComponent = __decorate([Component({\n  selector: 'app-questions-and-answers',\n  templateUrl: './questions-and-answers.component.html',\n  styleUrls: ['./questions-and-answers.component.css']\n})], QuestionsAndAnswersComponent);\nexport { QuestionsAndAnswersComponent };","map":{"version":3,"mappings":"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","names":["Component","Question","Answer","QuestionsAndAnswersComponent","constructor","ms","route","ss","gs","ts","snackBar","ngOnInit","loggedIn","isLoggedIn","id","snapshot","paramMap","get","groupId","console","log","getQuestions","subscribe","data","questions","table","error","msg","addQues","ques","userId","addQuestion","open","duration","durationInSeconds","horizontalPosition","verticalPosition","addAns","questionId","ans","addAnswer","editQues","editQuestion","questionName","editAns","answerId","editAnswer","answerName","reload","delete","deleteQuestion","deleteAns","deleteAnswer","getAnswers","answers","msg1","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/common/questions-and-answers/questions-and-answers.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { GroupServiceService } from '../../services/group-service.service';\nimport { MainserviceService } from '../../services/mainservice.service';\nimport { Question } from '../../../model/question';\nimport { StudentServiceService } from '../../services/student-service.service';\nimport { TrainerServiceService } from '../../services/trainer-service.service';\nimport { Answer } from '../../../model/answer';\n\n@Component({\n  selector: 'app-questions-and-answers',\n  templateUrl: './questions-and-answers.component.html',\n  styleUrls: ['./questions-and-answers.component.css']\n})\nexport class QuestionsAndAnswersComponent implements OnInit{\n\n  public loggedIn:any;\n  public id:any;\n  public groupId:any;\n  public questions:any;\n  public msg='';\n  public val!:String;\n  durationInSeconds = 5;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\nverticalPosition: MatSnackBarVerticalPosition = 'top';\n  public ques=new Question;\n  public ans=new Answer();\n  public questionName:any;\n  public answers:any;\n  public msg1:any;\n  public answerName!:string;\n  constructor(private ms:MainserviceService,private route:ActivatedRoute,private ss:StudentServiceService,private gs:GroupServiceService,private ts:TrainerServiceService,private snackBar:MatSnackBar){\n\n  }\n  ngOnInit(): void {\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id=this.route.snapshot.paramMap.get('userId');\n    this.groupId=this.route.snapshot.paramMap.get('groupId');\n    console.log(this.groupId);\n\n    // this.gs.getQuestions(this.groupId).subscribe(\n    //   data=>{\n        \n    //     console.log(data);\n        \n    //   },\n    //   error=>{\n    //      this.msg=\"error\";\n    //   }\n    // )\n\n    this.gs.getQuestions(this.groupId).subscribe(\n      data=>{\n         this.questions=data;\n         console.table(data);\n      },\n      error=>{\n        this.msg='error';\n      }\n    )\n    \n  }\n\n  addQues(){\n    this.ques.groupId=this.groupId;\n    this.ques.userId=this.id;\n    \n    console.log(this.ques);\n    this.gs.addQuestion(this.ques).subscribe(\n       data=>{\n        \n        this.snackBar.open(\"Added successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n          this.ngOnInit();\n          console.log(\"hiw\");\n          \n       },\n       error=>{\n        this.snackBar.open(\"Problem occured\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n       }\n    )\n  }\n\n  addAns(questionId:number){\n    this.ans.questionId=questionId;\n    this.ans.userId=this.id;\n    this.gs.addAnswer(this.ans).subscribe(\n      data=>{\n        this.snackBar.open(\"Added successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n          this.ngOnInit();\n      },\n      error=>{\n        this.snackBar.open(\"Problem occured\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n      }\n    )\n\n  }\n\n  editQues(questionId:number){\n   \n    \n    this.gs.editQuestion(questionId,this.questionName).subscribe(\n      data=>{\n        this.snackBar.open(\"Edited successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n          this.ngOnInit();\n      },\n      error=>{\n        this.snackBar.open(\"Problem occured\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n      }\n    )\n  }\n\n  editAns(answerId:number){\n   \n    \n    this.gs.editAnswer(answerId,this.answerName).subscribe(\n      data=>{\n        this.snackBar.open(\"Edited successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n          this.ngOnInit();\n      },\n      error=>{\n        this.snackBar.open(\"Problem occured\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n      }\n    )\n  }\n\n  reload(){\n    this.ngOnInit();\n  }\n\n    delete(questionId:number){\n     \n      this.gs.deleteQuestion(questionId).subscribe(\n        data=>{\n          this.snackBar.open(\"Deleted successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition})\n            // this.ngOnInit();\n\n        },\n        error=>{\n          this.snackBar.open(\"Problem occured\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,})\n            this.ngOnInit();\n\n        }\n      )\n    \n\n  }\n  deleteAns(answerId:number){\n     \n    this.gs.deleteAnswer(answerId).subscribe(\n      data=>{\n        this.snackBar.open(\"Deleted successfully\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition})\n          this.ngOnInit();\n\n      },\n      error=>{\n        this.snackBar.open(\"Problem occured\",\"X\",{duration:this.durationInSeconds*1000,horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,})\n          this.ngOnInit();\n\n      }\n    )\n  \n\n}\n\n  getAnswers(questionId:number){\n    this.answers=[];\n    this.msg1='';\n    this.gs.getAnswers(questionId).subscribe(\n      data=>{\n         this.answers=data;\n      },\n      error=>{\n        \n       this.msg1='not found';\n      }\n\n    )\n  }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}