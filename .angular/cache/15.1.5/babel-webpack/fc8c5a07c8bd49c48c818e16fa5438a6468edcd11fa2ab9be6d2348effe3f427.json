{"ast":null,"code":"import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/group-service.service\";\nimport * as i2 from \"../../../services/mainservice.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction FileUploadComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"form\", 7)(2, \"div\", 8)(3, \"label\", 9)(4, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function FileUploadComponent_div_0_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectFile($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FileUploadComponent_div_0_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.upload());\n    });\n    i0.ɵɵtext(7, \" Upload \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.selectedFiles);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    width: a0\n  };\n};\nfunction FileUploadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r1.progress + \"%\"));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r1.progress);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.progress, \"% \");\n  }\n}\nfunction FileUploadComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.message);\n  }\n}\nfunction FileUploadComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 16)(1, \"li\", 17)(2, \"a\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", file_r7.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(file_r7.name);\n  }\n}\nexport class FileUploadComponent {\n  constructor(gs, ms, route) {\n    this.gs = gs;\n    this.ms = ms;\n    this.route = route;\n    this.progress = 0;\n    this.message = '';\n  }\n  ngOnInit() {\n    this.groupId = this.route.snapshot.paramMap.get('groupId');\n    this.fileInfos = this.gs.getFiles(this.groupId);\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id = this.route.snapshot.paramMap.get('userId');\n    this.ms.getUser(this.id).subscribe(data => {\n      this.user = data;\n    }, error => {});\n  }\n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n  upload() {\n    this.progress = 0;\n    if (this.selectedFiles) {\n      const file = this.selectedFiles.item(0);\n      if (file) {\n        this.currentFile = file;\n        this.gs.upload(this.currentFile, this.groupId).subscribe(event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progress = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            this.message = event.body.message;\n            this.fileInfos = this.gs.getFiles(this.groupId);\n          }\n        }, err => {\n          console.log(err);\n          this.progress = 0;\n          if (err.error && err.error.message) {\n            this.message = err.error.message;\n          } else {\n            this.message = 'Could not upload the file!';\n          }\n          this.currentFile = undefined;\n        });\n      }\n      this.ngOnInit();\n      this.selectedFiles = undefined;\n    }\n  }\n}\nFileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.GroupServiceService), i0.ɵɵdirectiveInject(i2.MainserviceService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nFileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploadComponent,\n  selectors: [[\"app-file-upload\"]],\n  decls: 8,\n  vars: 6,\n  consts: [[\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"progress my-3\", 4, \"ngIf\"], [\"class\", \"alert alert-secondary\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"card\", \"mt-3\"], [1, \"card-header\"], [\"class\", \"list-group list-group-flush\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"enctype\", \"multipart/form-data\"], [1, \"col-8\"], [1, \"btn\", \"btn-default\", \"p-0\"], [\"type\", \"file\", 3, \"change\"], [1, \"col-4\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"disabled\", \"click\"], [1, \"progress\", \"my-3\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-info\", \"progress-bar-striped\", 3, \"ngStyle\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"], [1, \"list-group\", \"list-group-flush\"], [1, \"list-group-item\"], [3, \"href\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FileUploadComponent_div_0_Template, 8, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, FileUploadComponent_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, FileUploadComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵtext(5, \"List of Files\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, FileUploadComponent_ul_6_Template, 4, 2, \"ul\", 5);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.user.role == 2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentFile);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 4, ctx.fileInfos));\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.NgForOf, i5.NgIf, i5.NgStyle, i5.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpEventType","HttpResponse","i0","FileUploadComponent","constructor","gs","ms","route","ngOnInit","groupId","snapshot","paramMap","get","fileInfos","getFiles","loggedIn","isLoggedIn","id","getUser","subscribe","data","user","error","selectFile","event","selectedFiles","target","files","upload","progress","file","item","currentFile","type","UploadProgress","Math","round","loaded","total","message","body","err","console","log","undefined","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/common/file-upload/file-upload.component.ts","/Users/KO20422228/Documents/frontend-els/ELS_UI/src/app/common/file-upload/file-upload.component.html"],"sourcesContent":["import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { GroupServiceService } from '../../../services/group-service.service';\nimport { MainserviceService } from '../../../services/mainservice.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n\n  selectedFiles?: FileList;\n  currentFile?: File;\n  progress = 0;\n  message = '';\n  public groupId:any;\n  public loggedIn:any;\n  public id:any;\n  public user:Reg;\n  fileInfos?: Observable<any>;\n\n  constructor(private gs: GroupServiceService,private ms:MainserviceService,private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.groupId=this.route.snapshot.paramMap.get('groupId');\n    this.fileInfos = this.gs.getFiles(this.groupId);\n    this.loggedIn = this.ms.isLoggedIn();\n    this.id=this.route.snapshot.paramMap.get('userId');\n    this.ms.getUser(this.id).subscribe(\n      data=>{\n        this.user=data;\n      },\n      error=>{\n\n      }\n    )\n  }\n\n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n  upload(): void {\n    this.progress = 0;\n  \n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n  \n      if (file) {\n        this.currentFile = file;\n  \n        this.gs.upload(this.currentFile,this.groupId).subscribe(\n          (event: any) => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round(100 * event.loaded / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              this.fileInfos = this.gs.getFiles(this.groupId);\n            }\n          },\n          (err: any) => {\n            console.log(err);\n            this.progress = 0;\n  \n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n  \n            this.currentFile = undefined;\n          });\n      }\n      this.ngOnInit();\n      this.selectedFiles = undefined;\n    }\n  }\n\n}\n\n\n","<div *ngIf=\"user.role==2\" class=\"row\">\n\n    <form enctype=\"multipart/form-data\">\n    <div class=\"col-8\">\n      <label class=\"btn btn-default p-0\">\n        \n        <input type=\"file\" (change)=\"selectFile($event)\" />\n      </label>\n    </div>\n  \n    <div class=\"col-4\">\n      <button class=\"btn btn-success btn-sm\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n        Upload\n      </button>\n    </div>\n    </form>\n    </div>\n  \n  \n  <div *ngIf=\"currentFile\" class=\"progress my-3\">\n    <div\n      class=\"progress-bar progress-bar-info progress-bar-striped\"\n      role=\"progressbar\"\n      attr.aria-valuenow=\"{{ progress }}\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      [ngStyle]=\"{ width: progress + '%' }\"\n    >\n      {{ progress }}%\n    </div>\n  </div>\n  \n  <div *ngIf=\"message\" class=\"alert alert-secondary\" role=\"alert\">{{ message }}</div>\n  \n  <div class=\"card mt-3\">\n    <div class=\"card-header\">List of Files</div>\n    <ul\n      class=\"list-group list-group-flush\"\n      *ngFor=\"let file of fileInfos | async\"\n    >\n      <li class=\"list-group-item\">\n        <a href=\"{{ file.url }}\">{{ file.name}}</a>\n      </li>\n    </ul>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}